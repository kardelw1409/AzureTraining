variables:
  terraformstoragerg: 'rg-terraformstates-env'
  terraformstorageaccount: 'stterraformstateeshop'

steps:
- task: AzureCLI@1
  displayName: 'Azure CLI to deploy required Azure resources'
  inputs:
    azureSubscription: 'Visual Studio Professional Subscription (7988b774-962b-437e-b04d-6107fa39ffba)'
    scriptLocation: inlineScript
    inlineScript: |
     # this will create Azure resource group and storage account
     call az group create --location ukwest --name $(terraformstoragerg)
     
     call az storage account create --name $(terraformstorageaccount) --resource-group $(terraformstoragerg) --location ukwest --sku Standard_LRS
     
     call az storage container create --name terraform --account-name $(terraformstorageaccount)
     
     call az storage account keys list -g $(terraformstoragerg) -n $(terraformstorageaccount)



- task: AzurePowerShell@3
  displayName: 'Azure PowerShell script to get the storage key'
  inputs:
    azureSubscription: 'Visual Studio Professional Subscription (7988b774-962b-437e-b04d-6107fa39ffba)'
    ScriptType: InlineScript
    Inline: |
     # Using the script we will fetch storage key which is required in terraform file to authenticate backend storage account
     
     $key=(Get-AzureRmStorageAccountKey -ResourceGroupName $(terraformstoragerg) -AccountName $(terraformstorageaccount)).Value[0]
     
     Write-Host "##vso[task.setvariable variable=storagekey]$key"
     
    azurePowerShellVersion: LatestVersion



- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in terraform file'
  inputs:
    targetFiles: '**/*.tf'
    tokenPrefix: '__'
    tokenSuffix: '__'



- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.12.3'


  variables:
  terraformstoragerg: 'rg-terraformstates-env'
  terraformstorageaccount: 'stterraformstateeshop'



- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : init'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Valery_Kardel/terraform'
    backendServiceArm: 'Visual Studio Professional Subscription (7988b774-962b-437e-b04d-6107fa39ffba)'
    backendAzureRmResourceGroupName: '$(terraformstoragerg)'
    backendAzureRmStorageAccountName: '$(terraformstorageaccount)'
    backendAzureRmContainerName: terraform
    backendAzureRmKey: terraform.tfstate



- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : plan'
  inputs:
    command: plan
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Valery_Kardel/terraform'
    environmentServiceNameAzureRM: 'Visual Studio Professional Subscription (7988b774-962b-437e-b04d-6107fa39ffba)'



- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : apply -auto-approve'
  inputs:
    command: apply
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Valery_Kardel/terraform'
    environmentServiceNameAzureRM: 'Visual Studio Professional Subscription (7988b774-962b-437e-b04d-6107fa39ffba)'